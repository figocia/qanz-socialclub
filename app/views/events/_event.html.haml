%article.event{id: "event#{event.id}"}
  .container
    .row
      .col-sm-7
        = image_tag event.image_url if event.image?
        .map
          %div{id: "map#{event.id}", class: 'gmaps4rails_map', style: 'width: 665px; height: 375px'}
        .actions{id: "event_action_#{event.id}"}
          - unless admin
            - if current_user.comming_to_event?(event)
              = link_to "I'm not coming",event_participant_path(current_user.event_participant(event)), method: 'delete', class: "btn btn-warning"
            - elsif event.is_free?(current_user)
              = link_to "I'm coming", event_participants_path(event_id: event.id), method: 'post', class: "btn btn-primary"
            - else


              = link_to "Pay $#{event.non_member_fee} to come", nil, class: 'btn btn-success'
              = link_to "Join social club to come for free", join_social_club_index_path(event_id: event.id), method: 'post', class: 'btn btn-primary'
          - else

            = link_to 'Edit', edit_admin_event_path(event), remote: true, class: 'btn btn-primary'            
            = link_to event.is_confirmed? ? 'Cancel' : 'Confirm', toggle_confirm_admin_event_path(id: event.id), method: 'post', remote: true, class: 'btn btn-warning' unless event.expired?
            = link_to 'Delete', admin_event_path(event), method: 'delete', remote: true, class: 'btn btn-danger'  
      .event_info.col-sm-3
        %header
          %h3 
            = event.name
          - if event.is_confirmed?
            %span.label.label-success
              Confirmed

          -else
            %span.label.label-warning
              Not Confirmed          
          %span.badge 
            = event.number_of_people_comming  
          People coming
        .row        
          %h4 
            = "Address: #{event.address}"        
        .row    
          %h4
            = event.time.strftime("%F at %I:%M%p") if event.time?
        .row.description 
          %h4 Description:        
          %p 
            = event.description

                  
    

/ the handle attribute here need to be different, otherwise will always refer to the last map


:javascript 
  handler#{event.id} = Gmaps.build("Google");
    handler#{event.id}.buildMap({ provider: {}, internal: {id: "map#{event.id}"}}, function(){
      markers = handler#{event.id}.addMarkers([
        {
          "lat": #{event.latitude},
          "lng": #{event.longitude},        
          "infowindow": "#{event.name}",        
        }
      ]);
      handler#{event.id}.bounds.extendWith(markers);
      handler#{event.id}.fitMapToBounds();
      handler#{event.id}.getMap().setZoom(14);
      

    });